{"version":3,"sources":["Components/ScatterplotOverlay.jsx","Components/Map.jsx","Redux/Map/MapActions.js","Components/FileUpload.jsx","Redux/csvData/csvActions.js","Redux/csvData/csvReducer.js","Redux/Map/MapReducer.js","Redux/rootReducer.js","Redux/store.js","Components/Navbar.jsx","Components/Charts.jsx","App.js","serviceWorker.js","index.js"],"names":["round","x","n","tenN","Math","pow","ScatterplotOverlay","_redraw","width","height","ctx","isDragging","project","unproject","props","dotRadius","dotFill","compositeOperation","renderWhileDragging","locations","lngLatAccessor","clearRect","globalCompositeOperation","pixel","pixelRounded","fillStyle","beginPath","arc","PI","fill","redraw","this","PureComponent","displayName","defaultProps","location","get","globalOpacity","connect","state","data","mapData","map","dispatch","addMonthlyData","type","payload","addHourlyData","console","log","addBookingData","addDistanceData","addTravelTypeData","useState","pickups","dropoffs","mapState","setMapState","monthFilter","setMonthFilter","hourFilter","setHourFilter","latitude","longitude","zoom","center","viewPort","setViewPort","pickupsOnly","setPickupsOnly","dropoffsOnly","setDropOffsOnly","handleModeFilter","choice","newpickups","newdropoffs","d","pickup","undefined","position","push","booked_through","old","useEffect","cleanedData","cleanData","monthlyData","hourlyData","bookingData","distanceData","travelTypeData","online_booking","mobile_site_booking","pickedUp","droppedOff","from_date","split","length","to_date","pickpos","droppos","from_long","Number","from_lat","to_long","to_lat","travel_type_id","package_id","month","months","Array","Date","getMonth","hour","dropped","className","onViewportChange","viewport","mapStyle","mapboxApiAccessToken","Immutable","fromJS","onClick","handleHourFilter","name","onChange","e","target","value","handleMonthlyFilter","addData","fileTypes","handleFiles","files","reader","FileReader","readAsText","onload","csv","lines","result","headers","i","obj","currentline","j","pop","csvJSON","id","INITIAL_STATE","csvReducer","action","mapReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","Navbar","chart","setChart","hours","bookings","distance","travelType","angle","h","m","b","floor","t","xType","color","title","style","text","fontSize","tickSizeOuter","stroke","tickPadding","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wYAyBA,SAASA,EAAMC,EAAGC,GAChB,IAAMC,EAAOC,KAAKC,IAAI,GAAIH,GAC1B,OAAOE,KAAKJ,MAAMC,EAAIE,GAAQA,EAahC,IAUqBG,E,2MAEnBC,QAAU,YAA6D,IAA1DC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,QAAyB,KAAhBC,UAQhD,EAAKC,OANPC,EAFkE,EAElEA,UACAC,EAHkE,EAGlEA,QACAC,EAJkE,EAIlEA,mBACAC,EALkE,EAKlEA,oBACAC,EANkE,EAMlEA,UACAC,EAPkE,EAOlEA,eAMF,GAHAV,EAAIW,UAAU,EAAG,EAAGb,EAAOC,GAC3BC,EAAIY,yBAA2BL,GAE1BC,IAAwBP,IAAeQ,EAAW,CAAC,IAAD,uBACrD,YAAuBA,EAAvB,+CAAkC,CAAC,IAC3BI,EAAQX,EAAQQ,EADU,UAE1BI,EAAe,CAACxB,EAAMuB,EAAM,GAAI,GAAIvB,EAAMuB,EAAM,GAAI,IAExDC,EAAa,GAAKT,GAAa,GAC/BS,EAAa,GAAKT,EAAYP,GAC9BgB,EAAa,GAAKT,GAAa,GAC/BS,EAAa,GAAKT,EAAYN,IAE9BC,EAAIe,UAAYT,EAChBN,EAAIgB,YACJhB,EAAIiB,IAAIH,EAAa,GAAIA,EAAa,GAAIT,EAAW,EAAa,EAAVX,KAAKwB,IAC7DlB,EAAImB,SAb6C,qF,wEAqBvD,OAAO,kBAAC,IAAD,CAAeC,OAAQC,KAAKxB,c,GApCSyB,iBAwChD1B,EAAmB2B,YAAc,qBAEjC3B,EAAmB4B,aApDE,CACnBd,eAAgB,SAAAe,GAAQ,MAAI,CAACA,EAASC,IAAI,GAAID,EAASC,IAAI,KAC3DlB,qBAAqB,EACrBH,UAAW,EACXC,QAAS,UACTqB,cAAe,EAEfpB,mBAAoB,e,MCyXtB,IAgBeqB,eAhBS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAMC,KACZC,QAASF,EAAMG,QAIQ,SAAAC,GACzB,MAAO,CACLC,eAAgB,SAAAJ,GAAI,OAAIG,ECjbE,SAAAH,GAC5B,MAAO,CACLK,KAAM,mBACNC,QAASN,GD8awBI,CAAeJ,KAChDO,cAAe,SAAAP,GAAI,OAAIG,EC3aE,SAAAH,GAE3B,OADAQ,QAAQC,IAAI,QACL,CACLJ,KAAM,kBACNC,QAASN,GDuauBO,CAAcP,KAC9CU,eAAgB,SAAAV,GAAI,OAAIG,ECpaE,SAAAH,GAC5B,MAAO,CACLK,KAAM,mBACNC,QAASN,GDiawBU,CAAeV,KAChDW,gBAAiB,SAAAX,GAAI,OAAIG,EC9ZE,SAAAH,GAC7B,MAAO,CACLK,KAAM,oBACNC,QAASN,GD2ZyBW,CAAgBX,KAClDY,kBAAmB,SAAAZ,GAAI,OAAIG,ECxZE,SAAAH,GAC/B,MAAO,CACLK,KAAM,uBACNC,QAASN,GDqZ2BY,CAAkBZ,QAG3CF,EA1af,SAAaxB,GAEX,IAFkB,EAmBcuC,mBARR,CACtBb,KAAM,GACNc,QAAS,GACTC,SAAU,KAdM,mBAmBXC,EAnBW,KAmBDC,EAnBC,OAoBoBJ,mBAAS,IApB7B,mBAoBXK,EApBW,KAoBEC,EApBF,OAqBkBN,qBArBlB,mBAqBXO,EArBW,KAqBCC,EArBD,OAsBcR,mBApBd,CAChBS,SAAU,UACVC,UAAW,UACXC,KAAM,GACNC,OAAQ,CAAC,EAAG,GACZxD,OAAQ,OACRD,MAAO,SARS,mBAsBX0D,EAtBW,KAsBDC,EAtBC,OAuBoBd,oBAAS,GAvB7B,mBAuBXe,EAvBW,KAuBEC,EAvBF,OAwBsBhB,oBAAS,GAxB/B,mBAwBXiB,EAxBW,KAwBGC,EAxBH,KAuPZC,EAAmB,SAAAC,GACvB,IAAMC,EAAa,GACbC,EAAc,GAEpB,GAAe,QAAXF,EAAkB,CAAC,IAAD,uBACpB,YAAcjB,EAAShB,KAAvB,+CAA6B,CAAC,IAArBoC,EAAoB,QACvBA,EAAEC,aAAyBC,IAAfF,EAAEG,UAChBL,EAAWM,KAAKJ,EAAEG,UAEfH,EAAEC,aAAyBC,IAAfF,EAAEG,UACjBJ,EAAYK,KAAKJ,EAAEG,WANH,uFASf,CAAC,IAAD,uBACL,YAAcvB,EAAShB,KAAvB,+CAA6B,CAAC,IAArBoC,EAAoB,QACvBA,EAAEK,iBAAmBR,IACnBG,EAAEC,aAAyBC,IAAfF,EAAEG,UAChBL,EAAWM,KAAKJ,EAAEG,UAEfH,EAAEC,aAAyBC,IAAfF,EAAEG,UACjBJ,EAAYK,KAAKJ,EAAEG,YAPpB,mFAaPtB,GAAY,SAAAyB,GACV,OAAO,eACFA,EADL,CAEE5B,QAASoB,EACTnB,SAAUoB,QAmBhB,OAdAQ,qBAAU,WACR,GAAIrE,EAAM0B,KAAKA,KAAM,CACnB,IAAM4C,EAhQQ,SAAA5C,GAChB,IAAM6C,EAAY,GACZ/B,EAAU,GACVC,EAAW,GACX+B,EAAc,GACdC,EAAa,GACbC,EAAc,GACdC,EAAe,GACfC,EAAiB,GARC,uBAcxB,YAAclD,EAAd,+CAAoB,CAAC,IAAZoC,EAAW,QACdK,OAAc,EAEO,MAArBL,EAAEe,gBACJV,EAAiB,SACE,GACgB,MAA1BL,EAAEgB,qBACXX,EAAiB,SACE,IAEnBA,EAAiB,SACC,GAGpB,IAAIY,OAAQ,EACRC,OAAU,EAGM,SAAhBlB,EAAEmB,YACJF,EAAWjB,EAAEmB,UAAUC,MAAM,KAAK,GAAGA,MAAM,KAAK,IACnCC,OAAS,IACpBJ,EAAW,IAAMA,GAGH,SAAdjB,EAAEsB,UACJJ,EAAalB,EAAEsB,QAAQF,MAAM,KAAK,GAAGA,MAAM,KAAK,IACjCC,OAAS,IACtBH,EAAa,IAAMA,GAGvB,IAAIK,OAAO,EAAEC,OAAO,EAOpB,OANoB,SAAhBxB,EAAEyB,YACJF,EAAU,CAACG,OAAO1B,EAAEyB,WAAYC,OAAO1B,EAAE2B,YAEzB,SAAd3B,EAAE4B,UACJJ,EAAU,CAACE,OAAO1B,EAAE4B,SAAUF,OAAO1B,EAAE6B,UAEjC7B,EAAE8B,gBACR,IAAK,IACHhB,EAAe,iBAAmBA,EAAe,iBAC7CA,EAAe,iBAAmB,EAClC,EACJ,MACF,IAAK,IACHA,EAAe,kBAAoBA,EAAe,kBAC9CA,EAAe,kBAAoB,EACnC,EACJ,MACF,IAAK,IACHA,EAAe,iBAAmBA,EAAe,iBAC7CA,EAAe,iBAAmB,EAClC,EACJ,MACF,QACEA,EAAc,OAAaA,EAAc,OACrCA,EAAc,OAAa,EAC3B,EAER,OAAQd,EAAE+B,YACR,IAAK,IACHlB,EAAa,WAAaA,EAAa,WACnCA,EAAa,WAAa,EAC1B,EACJ,MACF,IAAK,IACHA,EAAa,WAAaA,EAAa,WACnCA,EAAa,WAAa,EAC1B,EACJ,MACF,IAAK,IACHA,EAAa,WAAaA,EAAa,WACnCA,EAAa,WAAa,EAC1B,EACJ,MACF,IAAK,IACHA,EAAa,YAAcA,EAAa,YACpCA,EAAa,YAAc,EAC3B,EACJ,MACF,IAAK,IACHA,EAAa,WAAaA,EAAa,WACnCA,EAAa,WAAa,EAC1B,EACJ,MACF,IAAK,IACHA,EAAa,WAAaA,EAAa,WACnCA,EAAa,WAAa,EAC1B,EACJ,MACF,IAAK,IACHA,EAAa,YAAcA,EAAa,YACpCA,EAAa,YAAc,EAC3B,EACJ,MACF,QACEA,EAAY,OAAaA,EAAY,OACjCA,EAAY,OAAa,EACzB,EAIR,IAAImB,OAAK,EACLC,EAAS,IAAIC,MACjBD,EAAO,GAAK,UACZA,EAAO,GAAK,WACZA,EAAO,GAAK,QACZA,EAAO,GAAK,QACZA,EAAO,GAAK,MACZA,EAAO,GAAK,OACZA,EAAO,GAAK,OACZA,EAAO,GAAK,SACZA,EAAO,GAAK,YACZA,EAAO,GAAK,UACZA,EAAO,IAAM,WACbA,EAAO,IAAM,WACTjC,EAAEmB,YACJa,EAAQC,EAAO,IAAIE,KAAKnC,EAAEmB,UAAUC,MAAM,KAAK,IAAIgB,aAGrD,IAAMnC,EAAS,CACbE,SAAUoB,EACVc,KAAMpB,EACNZ,iBACAJ,QAAQ,EACR+B,MAAOA,GAGTtB,EAAYT,EAAO+B,OAAStB,EAAYT,EAAO+B,OAC3CtB,EAAYT,EAAO+B,OAAS,EAC5B,EACJrB,EAAWV,EAAOoC,MAAQ1B,EAAWV,EAAOoC,MACxC1B,EAAWV,EAAOoC,MAAQ,EAC1B,EACJzB,EAAYX,EAAOI,gBAAkBO,EAAYX,EAAOI,gBACpDO,EAAYX,EAAOI,gBAAkB,EACrC,EACJ,IAAMiC,EAAU,CACdnC,SAAUqB,EACVa,KAAMnB,GAA0B,KAChCb,iBACAJ,QAAQ,GAEVQ,EAAUL,KAAKH,GAEXuB,QAA0BtB,IAAfsB,EAAQ,IACrB7C,EAASyB,KAAKoB,GAEZD,QAA0BrB,IAAfqB,EAAQ,IACrB7C,EAAQ0B,KAAKmB,GAEfd,EAAUL,KAAKkC,IApKO,kFA4KxB,OANApG,EAAMsC,kBAAkBsC,GACxB5E,EAAMoC,eAAesC,GACrB1E,EAAMiC,cAAcwC,GACpBzE,EAAM8B,eAAe0C,GACrBxE,EAAMqC,gBAAgBsC,GAEf,CAACJ,EAAW/B,EAASC,GAoFN8B,CAAUvE,EAAM0B,KAAKA,MAEzCiB,GAAY,SAAAyB,GACV,MAAO,CACL1C,KAAM4C,EAAY,GAClB9B,QAAS8B,EAAY,GACrB7B,SAAU6B,EAAY,UAI3B,CAACtE,EAAM0B,OAGR,yBAAK2E,UAAU,iBACb,yBAAKA,UAAU,cACb,qIAIA,kBAAC,IAAD,iBACMjD,EADN,CAEEkD,iBAAkB,SAAAC,GAAQ,OAAIlD,EAAYkD,IAC1CC,SAAS,uDACTC,qBAAqB,gGACrBJ,UAAU,YAET/C,GACC,kBAAC,EAAD,CACEjD,UAAWqG,IAAUC,OAAOjE,EAASF,SACrCvC,UAAW,EACXsB,cAAe,EACfpB,mBAAmB,UACnBD,QAAQ,aACRE,qBAAqB,IAGxBoD,GACC,kBAAC,EAAD,CACEnD,UAAWqG,IAAUC,OAAOjE,EAASD,UACrCxC,UAAW,EACXsB,cAAe,EACfpB,mBAAmB,cACnBD,QAAQ,UACRE,qBAAqB,KAI3B,0GAKF,yBAAKiG,UAAU,iBACb,4BAAQO,QAAS,kBAAMlD,EAAiB,YAAxC,gBACA,4BAAQkD,QAAS,kBAAMlD,EAAiB,YAAxC,gBACA,4BAAQkD,QAAS,kBAAMlD,EAAiB,YAAxC,gBACA,4BACEkD,QAAS,WACPlD,EAAiB,SAFrB,WAKW,KAEX,4BAAQkD,QAAS,kBAAMrD,GAAe,SAAAa,GAAG,OAAKA,OAA9C,kBAGA,4BAAQwC,QAAS,kBAAMnD,GAAgB,SAAAW,GAAG,OAAKA,OAA/C,kBACkB,KAElB,4BAAQwC,QAAS,kBA/HE,WACvB,IAAMhD,EAAa,GACbC,EAAc,GAFS,uBAG7B,YAAcnB,EAAShB,KAAvB,+CAA6B,CAAC,IAArBoC,EAAoB,QACvBA,EAAEqC,MAAQrD,IACRgB,EAAEC,aAAyBC,IAAfF,EAAEG,UAChBL,EAAWM,KAAKJ,EAAEG,UAEfH,EAAEC,aAAyBC,IAAfF,EAAEG,UACjBJ,EAAYK,KAAKJ,EAAEG,YATI,kFAa7BtB,GAAY,SAAAyB,GACV,OAAO,eACFA,EADL,CAEE5B,QAASoB,EACTnB,SAAUoB,OA8GagD,KAAvB,mBACA,4BACEC,KAAK,cACLC,SAAU,SAAAC,GACRjE,EAAciE,EAAEC,OAAOC,SAGzB,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,IAAf,aACA,4BAAQA,MAAO,IAAf,aACA,4BAAQA,MAAO,IAAf,aACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,aACA,4BAAQA,MAAO,IAAf,cAEF,4BAAQN,QAAS,kBAvLK,WAC1B,IAAMhD,EAAa,GACbC,EAAc,GACpB,GAAoB,KAAhBjB,EAAJ,CAHgC,2BAMhC,YAAcF,EAAShB,KAAvB,+CAA6B,CAAC,IAArBoC,EAAoB,QACvBA,EAAEgC,OAASlD,IACTkB,EAAEC,aAAyBC,IAAfF,EAAEG,UAChBL,EAAWM,KAAKJ,EAAEG,UAEfH,EAAEC,aAAyBC,IAAfF,EAAEG,UACjBJ,EAAYK,KAAKJ,EAAEG,YAZO,kFAgBhCtB,GAAY,SAAAyB,GACV,OAAO,eACFA,EADL,CAEE5B,QAASoB,EACTnB,SAAUoB,QAmKasD,KAAvB,oBACA,4BACEL,KAAK,cACLC,SAAU,SAAAC,GACRnE,EAAemE,EAAEC,OAAOC,SAG1B,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,kB,yBEhXV,IAWe1F,eAXS,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAMC,SAIW,SAAAG,GACzB,MAAO,CACLuF,QAAS,SAAA1F,GAAI,OAAIG,ECzDE,SAAAH,GACrB,MAAO,CACLK,KAAM,WACNC,QAASN,GDsDiB0F,CAAQ1F,QAGvBF,EAxDf,SAAoBxB,GAAQ,IAAD,EACDuC,mBAAS,IADR,mBAkCzB,OAlCyB,UAmCvB,yBAAK8D,UAAU,kBACb,kBAAC,IAAD,CAAiBgB,UAAW,OAAQC,YAVnB,SAAAC,GACnB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,EAAM,IACxBC,EAAOG,OAAS,WACd3H,EAAMoH,QA3BM,SAAAQ,GAOd,IANA,IAAIC,EAAQD,EAAI1C,MAAM,MAElB4C,EAAS,GAETC,EAAUF,EAAM,GAAG3C,MAAM,KAEpB8C,EAAI,EAAGA,EAAIH,EAAM1C,OAAQ6C,IAAK,CAIrC,IAHA,IAAIC,EAAM,GACNC,EAAcL,EAAMG,GAAG9C,MAAM,KAExBiD,EAAI,EAAGA,EAAIJ,EAAQ5C,OAAQgD,IAClCF,EAAIF,EAAQI,IAAMD,EAAYC,GAGhCL,EAAO5D,KAAK+D,GAMd,OAFAH,EAAOM,MAEAN,EAMSO,CAAQb,EAAOM,YAO3B,4BAAQzB,UAAU,MAAMiC,GAAG,aAA3B,0B,QEzCFC,G,MAAgB,IAUPC,EATI,WAAoC,IAAnC/G,EAAkC,uDAA1B8G,EAAeE,EAAW,uCACpD,OAAQA,EAAO1G,MACb,IAAK,WACH,MAAO,CAAEL,KAAM+G,EAAOzG,SACxB,QACE,OAAOP,ICNP8G,EAAgB,CACpB/D,YAAa,GACbC,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,eAAgB,IAmBH8D,EAjBI,WAAoC,IAAnCjH,EAAkC,uDAA1B8G,EAAeE,EAAW,uCACpD,OAAQA,EAAO1G,MACb,IAAK,mBACH,OAAO,eAAKN,EAAZ,CAAmB+C,YAAaiE,EAAOzG,UACzC,IAAK,kBACH,OAAO,eAAKP,EAAZ,CAAmBgD,WAAYgE,EAAOzG,UACxC,IAAK,mBACH,OAAO,eAAKP,EAAZ,CAAmBiD,YAAa+D,EAAOzG,UACzC,IAAK,oBACH,OAAO,eAAKP,EAAZ,CAAmBkD,aAAc8D,EAAOzG,UAC1C,IAAK,uBACH,OAAO,eAAKP,EAAZ,CAAmBmD,eAAgB6D,EAAOzG,UAC5C,QACE,OAAOP,ICjBEkH,cAAgB,CAAEjH,KAAM8G,EAAY5G,IAAK8G,ICMxD,IAEeE,EAFDC,YAAYC,EAAaC,IAAe,WAAf,EAJnB,K,MCHL,SAASC,IACtB,OACE,yBAAK3C,UAAU,UACb,sG,wBCiLN,IAKe7E,eALS,SAAAC,GACtB,MAAO,CACLE,QAASF,EAAMG,OAGJJ,EA7Kf,SAAgBxB,GAAQ,IAAD,EACKuC,mBAAS,QADd,mBACd0G,EADc,KACPC,EADO,OAQjBlJ,EAAM2B,QALR6C,EAHmB,EAGnBA,YACAC,EAJmB,EAInBA,WACAC,EALmB,EAKnBA,YACAC,EANmB,EAMnBA,aACAC,EAPmB,EAOnBA,eAEEmB,EAAS,GACXoD,EAAQ,GACRC,EAAW,GACXC,EAAW,GACXC,EAAa,GACbC,EAAQ,EAEV,IAAK,IAAIC,KAAK/E,EAAY,CACxB,IAAIwD,EAAM,GACVA,EAAG,EAAQuB,EACXvB,EAAG,EAAQxD,EAAW+E,GACtBL,EAAMjF,KAAK+D,GAEb,IAAK,IAAIwB,KAAKjF,EAAa,CACzB,IAAIyD,EAAM,GACVA,EAAG,EAAQwB,EACXxB,EAAG,EAAQzD,EAAYiF,GACvB1D,EAAO7B,KAAK+D,GAEd,IAAK,IAAIyB,KAAKhF,EACZ6E,GAAS7E,EAAYgF,GAEvB,IAAK,IAAIA,KAAKhF,EAAa,CACzB,IAAIuD,EAAM,GACVA,EAAG,EAAQyB,EACXzB,EAAG,EAAQvD,EAAYgF,GACvBzB,EAAG,MAAY3I,KAAKqK,MAAOjF,EAAYgF,GAAKH,EAAS,KACrDtB,EAAG,MAAYyB,EACfzB,EAAG,SAAe3I,KAAKqK,MAAOjF,EAAYgF,GAAKH,EAAS,KACxDH,EAASlF,KAAK+D,GAGhB,IAAK,IAAInE,KAAKa,EAAc,CAC1B,IAAIsD,EAAM,GACVA,EAAG,EAAQnE,EACXmE,EAAG,EAAQtD,EAAab,GACxBuF,EAASnF,KAAK+D,GAGhB,IAAK,IAAI2B,KAAKhF,EAAgB,CAC5B,IAAIqD,EAAM,GACVA,EAAG,EAAQ2B,EACX3B,EAAG,EAAQrD,EAAegF,GAE1B3B,EAAG,MAAY3I,KAAKqK,MAAO/E,EAAegF,GAAKL,EAAS,KACxDtB,EAAG,MAAY2B,EACf3B,EAAG,SAAe3I,KAAKqK,MAAO/E,EAAegF,GAAKL,EAAS,KAC3DD,EAAWpF,KAAK+D,GAIlB,OAFA/F,QAAQC,IAAIgH,EAAOpD,EAAQqD,GAGzB,yBAAK/C,UAAU,oBACb,yBAAKA,UAAU,UACF,SAAV4C,GACC,kBAAC,IAAD,CACEtJ,OAAQ,IACRD,MAAO,IACPmK,MAAM,UACNC,MAAM,WAEN,kBAAC,IAAD,CACEC,MAAM,kBACNC,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,OAGpC,kBAAC,IAAD,CACEF,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,KAElCC,cAAe,IAEjB,kBAAC,IAAD,CAAmBzI,KAAMyH,KAGlB,UAAVF,GACC,kBAAC,IAAD,CAAQtJ,OAAQ,IAAKD,MAAO,IAAKmK,MAAM,UAAUO,OAAO,WACtD,kBAAC,IAAD,CACEJ,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,OAGpC,kBAAC,IAAD,CACEF,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,KAElCC,cAAe,IAEjB,kBAAC,IAAD,CAAYzI,KAAMqE,KAGX,YAAVkD,GACC,kBAAC,IAAD,CAAQtJ,OAAQ,IAAKD,MAAO,IAAKmK,MAAM,UAAUC,MAAM,WACrD,kBAAC,IAAD,CACEE,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,OAGpC,kBAAC,IAAD,CACEF,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,KAElCC,cAAe,EACfE,YAAa,IAEf,kBAAC,IAAD,CAAmB3I,KAAM0H,KAGlB,aAAVH,GACC,kBAAC,IAAD,CAAQtJ,OAAQ,IAAKD,MAAO,IAAKmK,MAAM,UAAUC,MAAM,WACrD,kBAAC,IAAD,CACEE,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,OAGpC,kBAAC,IAAD,CACEF,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,KAElCC,cAAe,EACfE,YAAa,IAEf,kBAAC,IAAD,CAAmB3I,KAAM2H,KAGlB,eAAVJ,GACC,kBAAC,IAAD,CAAQtJ,OAAQ,IAAKD,MAAO,IAAKmK,MAAM,UAAUC,MAAM,WACrD,kBAAC,IAAD,CACEE,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,OAGpC,kBAAC,IAAD,CACEF,MAAO,CACLC,KAAM,CAAElJ,KAAM,OAAQmJ,SAAU,KAElCC,cAAe,EACfE,YAAa,IAEf,kBAAC,IAAD,CAAmB3I,KAAM4H,MAI/B,yBAAKjD,UAAU,eACb,4BAAQO,QAAS,kBAAMsC,EAAS,UAAhC,uBACA,4BAAQtC,QAAS,kBAAMsC,EAAS,aAAhC,oBACA,4BAAQtC,QAAS,kBAAMsC,EAAS,WAAhC,0BAGA,4BAAQtC,QAAS,kBAAMsC,EAAS,cAAhC,qBACA,4BAAQtC,QAAS,kBAAMsC,EAAS,gBAAhC,qBCrJOoB,MAhBf,WACE,OACE,kBAAC,IAAD,CAAU1B,MAAOA,GACf,yBAAKvC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,SCNYkE,QACW,cAA7BC,OAAOnJ,SAASoJ,UAEe,UAA7BD,OAAOnJ,SAASoJ,UAEhBD,OAAOnJ,SAASoJ,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f9e74d61.chunk.js","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Immutable from \"immutable\";\r\nimport { CanvasOverlay } from \"react-map-gl\";\r\n\r\nfunction round(x, n) {\r\n  const tenN = Math.pow(10, n);\r\n  return Math.round(x * tenN) / tenN;\r\n}\r\n\r\nconst propTypes = {\r\n  locations: PropTypes.instanceOf(Immutable.List).isRequired,\r\n  lngLatAccessor: PropTypes.func,\r\n  renderWhileDragging: PropTypes.bool,\r\n  globalOpacity: PropTypes.number,\r\n  dotRadius: PropTypes.number,\r\n  dotFill: PropTypes.string,\r\n  compositeOperation: PropTypes.string\r\n};\r\n\r\nconst defaultProps = {\r\n  lngLatAccessor: location => [location.get(0), location.get(1)],\r\n  renderWhileDragging: true,\r\n  dotRadius: 4,\r\n  dotFill: \"#1FBAD6\",\r\n  globalOpacity: 1,\r\n  // Same as browser default.\r\n  compositeOperation: \"source-over\"\r\n};\r\n\r\nexport default class ScatterplotOverlay extends PureComponent {\r\n  /* eslint-disable max-statements */\r\n  _redraw = ({ width, height, ctx, isDragging, project, unproject }) => {\r\n    const {\r\n      dotRadius,\r\n      dotFill,\r\n      compositeOperation,\r\n      renderWhileDragging,\r\n      locations,\r\n      lngLatAccessor\r\n    } = this.props;\r\n\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.globalCompositeOperation = compositeOperation;\r\n\r\n    if ((renderWhileDragging || !isDragging) && locations) {\r\n      for (const location of locations) {\r\n        const pixel = project(lngLatAccessor(location));\r\n        const pixelRounded = [round(pixel[0], 1), round(pixel[1], 1)];\r\n        if (\r\n          pixelRounded[0] + dotRadius >= 0 &&\r\n          pixelRounded[0] - dotRadius < width &&\r\n          pixelRounded[1] + dotRadius >= 0 &&\r\n          pixelRounded[1] - dotRadius < height\r\n        ) {\r\n          ctx.fillStyle = dotFill;\r\n          ctx.beginPath();\r\n          ctx.arc(pixelRounded[0], pixelRounded[1], dotRadius, 0, Math.PI * 2);\r\n          ctx.fill();\r\n        }\r\n      }\r\n    }\r\n  };\r\n  /* eslint-enable max-statements */\r\n\r\n  render() {\r\n    return <CanvasOverlay redraw={this._redraw} />;\r\n  }\r\n}\r\n\r\nScatterplotOverlay.displayName = \"ScatterplotOverlay\";\r\nScatterplotOverlay.propTypes = propTypes;\r\nScatterplotOverlay.defaultProps = defaultProps;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addMonthlyData,\r\n  addHourlyData,\r\n  addBookingData,\r\n  addDistanceData,\r\n  addTravelTypeData\r\n} from \"./../Redux/Map/MapActions\";\r\nimport Immutable from \"immutable\";\r\nimport ScatterplotOverlay from \"./ScatterplotOverlay\";\r\nimport \"./Map.scss\";\r\nimport MapGL from \"react-map-gl\";\r\n\r\nfunction Map(props) {\r\n  // initial viewport for the map, setting location to bengaluru\r\n  const initialVP = {\r\n    latitude: 12.972442,\r\n    longitude: 77.580643,\r\n    zoom: 11,\r\n    center: [0, 0],\r\n    height: \"70vh\",\r\n    width: \"60vw\"\r\n  };\r\n\r\n  const initialMapState = {\r\n    data: [],\r\n    pickups: [],\r\n    dropoffs: []\r\n  };\r\n\r\n  // initializing all the pieces of state required\r\n\r\n  const [mapState, setMapState] = useState(initialMapState);\r\n  const [monthFilter, setMonthFilter] = useState(\"\");\r\n  const [hourFilter, setHourFilter] = useState();\r\n  const [viewPort, setViewPort] = useState(initialVP);\r\n  const [pickupsOnly, setPickupsOnly] = useState(true);\r\n  const [dropoffsOnly, setDropOffsOnly] = useState(false);\r\n\r\n  // cleaning the js object data and creating more usable data with added info like hour, mode and accumulating monthly,hourly and booking data for the charts\r\n\r\n  const cleanData = data => {\r\n    const cleanData = [];\r\n    const pickups = [];\r\n    const dropoffs = [];\r\n    const monthlyData = {};\r\n    const hourlyData = {};\r\n    const bookingData = {};\r\n    const distanceData = {};\r\n    const travelTypeData = {};\r\n\r\n    let mobileUserCount = 0,\r\n      onlineUserCount = 0,\r\n      otherUserCount = 0;\r\n\r\n    for (let d of data) {\r\n      let booked_through;\r\n\r\n      if (d.online_booking === \"1\") {\r\n        booked_through = \"online\";\r\n        onlineUserCount += 1;\r\n      } else if (d.mobile_site_booking === \"1\") {\r\n        booked_through = \"mobile\";\r\n        mobileUserCount += 1;\r\n      } else {\r\n        booked_through = \"others\";\r\n        otherUserCount += 1;\r\n      }\r\n\r\n      let pickedUp;\r\n      let droppedOff;\r\n\r\n      //\r\n      if (d.from_date !== \"NULL\") {\r\n        pickedUp = d.from_date.split(\" \")[1].split(\":\")[0];\r\n        if (pickedUp.length < 2) {\r\n          pickedUp = \"0\" + pickedUp;\r\n        }\r\n      }\r\n      if (d.to_date !== \"NULL\") {\r\n        droppedOff = d.to_date.split(\" \")[1].split(\":\")[0];\r\n        if (droppedOff.length < 2) {\r\n          droppedOff = \"0\" + droppedOff;\r\n        }\r\n      }\r\n      let pickpos, droppos;\r\n      if (d.from_long !== \"NULL\") {\r\n        pickpos = [Number(d.from_long), Number(d.from_lat)];\r\n      }\r\n      if (d.to_long !== \"NULL\") {\r\n        droppos = [Number(d.to_long), Number(d.to_lat)];\r\n      }\r\n      switch (d.travel_type_id) {\r\n        case \"1\":\r\n          travelTypeData[\"Long distance\"] = travelTypeData[\"Long distance\"]\r\n            ? travelTypeData[\"Long distance\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"2\":\r\n          travelTypeData[\"Point to point\"] = travelTypeData[\"Point to point\"]\r\n            ? travelTypeData[\"Point to point\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"3\":\r\n          travelTypeData[\"Hourly Rental\"] = travelTypeData[\"Hourly Rental\"]\r\n            ? travelTypeData[\"Hourly Rental\"] + 1\r\n            : 1;\r\n          break;\r\n        default:\r\n          travelTypeData[\"Others\"] = travelTypeData[\"Others\"]\r\n            ? travelTypeData[\"Others\"] + 1\r\n            : 1;\r\n      }\r\n      switch (d.package_id) {\r\n        case \"1\":\r\n          distanceData[\"<=40kms\"] = distanceData[\"<=40kms\"]\r\n            ? distanceData[\"<=40kms\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"2\":\r\n          distanceData[\"<=80kms\"] = distanceData[\"<=80kms\"]\r\n            ? distanceData[\"<=80kms\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"3\":\r\n          distanceData[\"<=60kms\"] = distanceData[\"<=60kms\"]\r\n            ? distanceData[\"<=60kms\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"4\":\r\n          distanceData[\"<=100kms\"] = distanceData[\"<=100kms\"]\r\n            ? distanceData[\"<=100kms\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"5\":\r\n          distanceData[\"<=50kms\"] = distanceData[\"<=50kms\"]\r\n            ? distanceData[\"<=50kms\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"6\":\r\n          distanceData[\"<=30kms\"] = distanceData[\"<=30kms\"]\r\n            ? distanceData[\"<=30kms\"] + 1\r\n            : 1;\r\n          break;\r\n        case \"7\":\r\n          distanceData[\"<=120kms\"] = distanceData[\"<=120kms\"]\r\n            ? distanceData[\"<=120kms\"] + 1\r\n            : 1;\r\n          break;\r\n        default:\r\n          distanceData[\"others\"] = distanceData[\"others\"]\r\n            ? distanceData[\"others\"] + 1\r\n            : 1;\r\n          break;\r\n      }\r\n\r\n      let month;\r\n      let months = new Array();\r\n      months[0] = \"January\";\r\n      months[1] = \"February\";\r\n      months[2] = \"March\";\r\n      months[3] = \"April\";\r\n      months[4] = \"May\";\r\n      months[5] = \"June\";\r\n      months[6] = \"July\";\r\n      months[7] = \"August\";\r\n      months[8] = \"September\";\r\n      months[9] = \"October\";\r\n      months[10] = \"November\";\r\n      months[11] = \"December\";\r\n      if (d.from_date) {\r\n        month = months[new Date(d.from_date.split(\" \")[0]).getMonth()];\r\n      }\r\n\r\n      const pickup = {\r\n        position: pickpos,\r\n        hour: pickedUp,\r\n        booked_through,\r\n        pickup: true,\r\n        month: month\r\n      };\r\n\r\n      monthlyData[pickup.month] = monthlyData[pickup.month]\r\n        ? monthlyData[pickup.month] + 1\r\n        : 1;\r\n      hourlyData[pickup.hour] = hourlyData[pickup.hour]\r\n        ? hourlyData[pickup.hour] + 1\r\n        : 1;\r\n      bookingData[pickup.booked_through] = bookingData[pickup.booked_through]\r\n        ? bookingData[pickup.booked_through] + 1\r\n        : 1;\r\n      const dropped = {\r\n        position: droppos,\r\n        hour: droppedOff ? droppedOff : null,\r\n        booked_through,\r\n        pickup: false\r\n      };\r\n      cleanData.push(pickup);\r\n\r\n      if (droppos && droppos[0] !== undefined) {\r\n        dropoffs.push(droppos);\r\n      }\r\n      if (pickpos && pickpos[0] !== undefined) {\r\n        pickups.push(pickpos);\r\n      }\r\n      cleanData.push(dropped);\r\n    }\r\n    props.addTravelTypeData(travelTypeData);\r\n    props.addBookingData(bookingData);\r\n    props.addHourlyData(hourlyData);\r\n    props.addMonthlyData(monthlyData);\r\n    props.addDistanceData(distanceData);\r\n\r\n    return [cleanData, pickups, dropoffs];\r\n  };\r\n  const handleMonthlyFilter = () => {\r\n    const newpickups = [];\r\n    const newdropoffs = [];\r\n    if (monthFilter === \"\") {\r\n      return;\r\n    }\r\n    for (let d of mapState.data) {\r\n      if (d.month == monthFilter) {\r\n        if (d.pickup && d.position !== undefined) {\r\n          newpickups.push(d.position);\r\n        }\r\n        if (!d.pickup && d.position !== undefined) {\r\n          newdropoffs.push(d.position);\r\n        }\r\n      }\r\n    }\r\n    setMapState(old => {\r\n      return {\r\n        ...old,\r\n        pickups: newpickups,\r\n        dropoffs: newdropoffs\r\n      };\r\n    });\r\n  };\r\n  const handleHourFilter = () => {\r\n    const newpickups = [];\r\n    const newdropoffs = [];\r\n    for (let d of mapState.data) {\r\n      if (d.hour == hourFilter) {\r\n        if (d.pickup && d.position !== undefined) {\r\n          newpickups.push(d.position);\r\n        }\r\n        if (!d.pickup && d.position !== undefined) {\r\n          newdropoffs.push(d.position);\r\n        }\r\n      }\r\n    }\r\n    setMapState(old => {\r\n      return {\r\n        ...old,\r\n        pickups: newpickups,\r\n        dropoffs: newdropoffs\r\n      };\r\n    });\r\n  };\r\n  const handleModeFilter = choice => {\r\n    const newpickups = [];\r\n    const newdropoffs = [];\r\n\r\n    if (choice === \"all\") {\r\n      for (let d of mapState.data) {\r\n        if (d.pickup && d.position !== undefined) {\r\n          newpickups.push(d.position);\r\n        }\r\n        if (!d.pickup && d.position !== undefined) {\r\n          newdropoffs.push(d.position);\r\n        }\r\n      }\r\n    } else {\r\n      for (let d of mapState.data) {\r\n        if (d.booked_through === choice) {\r\n          if (d.pickup && d.position !== undefined) {\r\n            newpickups.push(d.position);\r\n          }\r\n          if (!d.pickup && d.position !== undefined) {\r\n            newdropoffs.push(d.position);\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n    }\r\n    setMapState(old => {\r\n      return {\r\n        ...old,\r\n        pickups: newpickups,\r\n        dropoffs: newdropoffs\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.data.data) {\r\n      const cleanedData = cleanData(props.data.data);\r\n\r\n      setMapState(old => {\r\n        return {\r\n          data: cleanedData[0],\r\n          pickups: cleanedData[1],\r\n          dropoffs: cleanedData[2]\r\n        };\r\n      });\r\n    }\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <div className=\"Map-Container\">\r\n      <div className=\"Map-Actual\">\r\n        <p>\r\n          Upload your csv file on the left, filter the results on the right and\r\n          check out the graphs down below!\r\n        </p>\r\n        <MapGL\r\n          {...viewPort}\r\n          onViewportChange={viewport => setViewPort(viewport)}\r\n          mapStyle=\"mapbox://styles/dextrous24/ck4jfn3n011fm1cqpsvetwpmr\"\r\n          mapboxApiAccessToken=\"pk.eyJ1IjoiZGV4dHJvdXMyNCIsImEiOiJjazRqZXpsankxMDY2M21uenh5cXF6ZHprIn0.ky8FY-wVExN1IclibDMxGg\"\r\n          className=\"map-div\"\r\n        >\r\n          {pickupsOnly && (\r\n            <ScatterplotOverlay\r\n              locations={Immutable.fromJS(mapState.pickups)}\r\n              dotRadius={5}\r\n              globalOpacity={1}\r\n              compositeOperation=\"lighter\"\r\n              dotFill=\"lightgreen\"\r\n              renderWhileDragging={true}\r\n            />\r\n          )}\r\n          {dropoffsOnly && (\r\n            <ScatterplotOverlay\r\n              locations={Immutable.fromJS(mapState.dropoffs)}\r\n              dotRadius={5}\r\n              globalOpacity={1}\r\n              compositeOperation=\"source-over\"\r\n              dotFill=\"crimson\"\r\n              renderWhileDragging={true}\r\n            />\r\n          )}\r\n        </MapGL>\r\n        <p>\r\n          * Dropoffs are off by default, please toggle with the filter on the\r\n          right.\r\n        </p>\r\n      </div>\r\n      <div className=\"Btn-Container\">\r\n        <button onClick={() => handleModeFilter(\"mobile\")}>Only Mobile </button>\r\n        <button onClick={() => handleModeFilter(\"online\")}>Only Online </button>\r\n        <button onClick={() => handleModeFilter(\"others\")}>Only others </button>\r\n        <button\r\n          onClick={() => {\r\n            handleModeFilter(\"all\");\r\n          }}\r\n        >\r\n          Show all{\" \"}\r\n        </button>\r\n        <button onClick={() => setPickupsOnly(old => !old)}>\r\n          Toggle pickups\r\n        </button>\r\n        <button onClick={() => setDropOffsOnly(old => !old)}>\r\n          Toggle dropoffs{\" \"}\r\n        </button>\r\n        <button onClick={() => handleHourFilter(12)}>Filter by time </button>\r\n        <select\r\n          name=\"monthfilter\"\r\n          onChange={e => {\r\n            setHourFilter(e.target.value);\r\n          }}\r\n        >\r\n          <option value={0}>12 :00 AM</option>\r\n          <option value={1}>1 :00 AM</option>\r\n          <option value={2}>2 :00 AM</option>\r\n          <option value={3}>3 :00 AM</option>\r\n          <option value={4}>4 :00 AM</option>\r\n          <option value={5}>5 :00 AM</option>\r\n          <option value={6}>6 :00 AM</option>\r\n          <option value={7}>7 :00 AM</option>\r\n          <option value={8}>8 :00 AM</option>\r\n          <option value={9}>9 :00 AM</option>\r\n          <option value={10}>10 :00 AM</option>\r\n          <option value={11}>11 :00 AM</option>\r\n          <option value={12}>12 :00 PM</option>\r\n          <option value={13}>1 :00 PM</option>\r\n          <option value={14}>2 :00 PM</option>\r\n          <option value={15}>3 :00 PM</option>\r\n          <option value={16}>4 :00 PM</option>\r\n          <option value={17}>5 :00 PM</option>\r\n          <option value={18}>6 :00 PM</option>\r\n          <option value={19}>7 :00 PM</option>\r\n          <option value={20}>8 :00 PM</option>\r\n          <option value={21}>9 :00 PM</option>\r\n          <option value={22}>10 :00 PM</option>\r\n          <option value={23}>11 :00 PM</option>\r\n        </select>\r\n        <button onClick={() => handleMonthlyFilter()}>Filter by Month </button>\r\n        <select\r\n          name=\"monthfilter\"\r\n          onChange={e => {\r\n            setMonthFilter(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"January\">January</option>\r\n          <option value=\"February\">February</option>\r\n          <option value=\"March\">March</option>\r\n          <option value=\"April\">April</option>\r\n          <option value=\"May\">May</option>\r\n          <option value=\"June\">June</option>\r\n          <option value=\"July\">July</option>\r\n          <option value=\"August\">August</option>\r\n          <option value=\"September\">September</option>\r\n          <option value=\"October\">October</option>\r\n          <option value=\"November\">November</option>\r\n          <option value=\"December\">December</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.data,\r\n    mapData: state.map\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addMonthlyData: data => dispatch(addMonthlyData(data)),\r\n    addHourlyData: data => dispatch(addHourlyData(data)),\r\n    addBookingData: data => dispatch(addBookingData(data)),\r\n    addDistanceData: data => dispatch(addDistanceData(data)),\r\n    addTravelTypeData: data => dispatch(addTravelTypeData(data))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","export const addMonthlyData = data => {\r\n  return {\r\n    type: \"ADD_MONTHLY_DATA\",\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const addHourlyData = data => {\r\n  console.log(\"here\");\r\n  return {\r\n    type: \"ADD_HOURLY_DATA\",\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const addBookingData = data => {\r\n  return {\r\n    type: \"ADD_BOOKING_DATA\",\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const addDistanceData = data => {\r\n  return {\r\n    type: \"ADD_DISTANCE_DATA\",\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const addTravelTypeData = data => {\r\n  return {\r\n    type: \"ADD_TRAVEL_TYPE_DATA\",\r\n    payload: data\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport ReactFileReader from \"react-file-reader\";\r\nimport { connect } from \"react-redux\";\r\nimport { addData } from \"./../Redux/csvData/csvActions\";\r\nfunction FileUpload(props) {\r\n  const [data, setData] = useState([]);\r\n  // Function to convert csv into a JS object\r\n  const csvJSON = csv => {\r\n    var lines = csv.split(\"\\n\");\r\n\r\n    var result = [];\r\n\r\n    var headers = lines[0].split(\",\");\r\n\r\n    for (var i = 1; i < lines.length; i++) {\r\n      var obj = {};\r\n      var currentline = lines[i].split(\",\");\r\n\r\n      for (var j = 0; j < headers.length; j++) {\r\n        obj[headers[j]] = currentline[j];\r\n      }\r\n\r\n      result.push(obj);\r\n    }\r\n\r\n    //return //JavaScript object\r\n    result.pop();\r\n\r\n    return result;\r\n  };\r\n  const handleUpload = files => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(files[0]);\r\n    reader.onload = () => {\r\n      props.addData(csvJSON(reader.result));\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"File-Container\">\r\n      <ReactFileReader fileTypes={\".csv\"} handleFiles={handleUpload}>\r\n        <button className=\"btn\" id=\"uploadbtn\">\r\n          Upload a csv file\r\n        </button>\r\n      </ReactFileReader>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.data\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addData: data => dispatch(addData(data))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileUpload);\r\n","export const addData = data => {\r\n  return {\r\n    type: \"ADD_DATA\",\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const removeData = () => {\r\n  return {\r\n    type: \"REMOVE_DATA\"\r\n  };\r\n};\r\n","const INITIAL_STATE = [];\r\nconst csvReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DATA\":\r\n      return { data: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default csvReducer;\r\n","const INITIAL_STATE = {\r\n  monthlyData: [],\r\n  hourlyData: [],\r\n  bookingData: [],\r\n  distanceData: [],\r\n  travelTypeData: []\r\n};\r\nconst mapReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_MONTHLY_DATA\":\r\n      return { ...state, monthlyData: action.payload };\r\n    case \"ADD_HOURLY_DATA\":\r\n      return { ...state, hourlyData: action.payload };\r\n    case \"ADD_BOOKING_DATA\":\r\n      return { ...state, bookingData: action.payload };\r\n    case \"ADD_DISTANCE_DATA\":\r\n      return { ...state, distanceData: action.payload };\r\n    case \"ADD_TRAVEL_TYPE_DATA\":\r\n      return { ...state, travelTypeData: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mapReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport csvReducer from \"./csvData/csvReducer\";\r\nimport mapReducer from \"./Map/MapReducer\";\r\nexport default combineReducers({ data: csvReducer, map: mapReducer });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middlewares = [];\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./Navbar.scss\";\r\nexport default function Navbar() {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <p>\r\n        Ride Analytics, the only tool you'll need to understand your business.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Charts.scss\";\r\nimport \"./../../node_modules/react-vis/dist/style.css\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  RadialChart,\r\n  LineSeries,\r\n  Hint,\r\n  VerticalBarSeries\r\n} from \"react-vis\";\r\n\r\nfunction Charts(props) {\r\n  const [chart, setChart] = useState(\"hour\");\r\n  const {\r\n    monthlyData,\r\n    hourlyData,\r\n    bookingData,\r\n    distanceData,\r\n    travelTypeData\r\n  } = props.mapData;\r\n  let months = [],\r\n    hours = [],\r\n    bookings = [],\r\n    distance = [],\r\n    travelType = [],\r\n    angle = 0;\r\n\r\n  for (let h in hourlyData) {\r\n    let obj = {};\r\n    obj[\"x\"] = h;\r\n    obj[\"y\"] = hourlyData[h];\r\n    hours.push(obj);\r\n  }\r\n  for (let m in monthlyData) {\r\n    let obj = {};\r\n    obj[\"x\"] = m;\r\n    obj[\"y\"] = monthlyData[m];\r\n    months.push(obj);\r\n  }\r\n  for (let b in bookingData) {\r\n    angle += bookingData[b];\r\n  }\r\n  for (let b in bookingData) {\r\n    let obj = {};\r\n    obj[\"x\"] = b;\r\n    obj[\"y\"] = bookingData[b];\r\n    obj[\"angle\"] = Math.floor((bookingData[b] / angle) * 360);\r\n    obj[\"label\"] = b;\r\n    obj[\"subLabel\"] = Math.floor((bookingData[b] / angle) * 100);\r\n    bookings.push(obj);\r\n  }\r\n\r\n  for (let d in distanceData) {\r\n    let obj = {};\r\n    obj[\"x\"] = d;\r\n    obj[\"y\"] = distanceData[d];\r\n    distance.push(obj);\r\n  }\r\n\r\n  for (let t in travelTypeData) {\r\n    let obj = {};\r\n    obj[\"x\"] = t;\r\n    obj[\"y\"] = travelTypeData[t];\r\n\r\n    obj[\"angle\"] = Math.floor((travelTypeData[t] / angle) * 360);\r\n    obj[\"label\"] = t;\r\n    obj[\"subLabel\"] = Math.floor((travelTypeData[t] / angle) * 100);\r\n    travelType.push(obj);\r\n  }\r\n  console.log(hours, months, bookings);\r\n\r\n  return (\r\n    <div className=\"charts-container\">\r\n      <div className=\"charts\">\r\n        {chart === \"hour\" && (\r\n          <XYPlot\r\n            height={400}\r\n            width={900 * 0.85}\r\n            xType=\"ordinal\"\r\n            color=\"#1adb87\"\r\n          >\r\n            <XAxis\r\n              title=\"Hour of the day\"\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 15 }\r\n              }}\r\n            />\r\n            <YAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 12 }\r\n              }}\r\n              tickSizeOuter={0}\r\n            />\r\n            <VerticalBarSeries data={hours} />\r\n          </XYPlot>\r\n        )}\r\n        {chart === \"month\" && (\r\n          <XYPlot height={400} width={900} xType=\"ordinal\" stroke=\"#1adb87\">\r\n            <XAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 13 }\r\n              }}\r\n            />\r\n            <YAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 12 }\r\n              }}\r\n              tickSizeOuter={0}\r\n            />\r\n            <LineSeries data={months} />\r\n          </XYPlot>\r\n        )}\r\n        {chart === \"booking\" && (\r\n          <XYPlot height={400} width={700} xType=\"ordinal\" color=\"#1adb87\">\r\n            <XAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 15 }\r\n              }}\r\n            />\r\n            <YAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 12 }\r\n              }}\r\n              tickSizeOuter={0}\r\n              tickPadding={0}\r\n            />\r\n            <VerticalBarSeries data={bookings} />\r\n          </XYPlot>\r\n        )}\r\n        {chart === \"distance\" && (\r\n          <XYPlot height={400} width={700} xType=\"ordinal\" color=\"#1adb87\">\r\n            <XAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 15 }\r\n              }}\r\n            />\r\n            <YAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 12 }\r\n              }}\r\n              tickSizeOuter={0}\r\n              tickPadding={0}\r\n            />\r\n            <VerticalBarSeries data={distance} />\r\n          </XYPlot>\r\n        )}\r\n        {chart === \"travelType\" && (\r\n          <XYPlot height={400} width={700} xType=\"ordinal\" color=\"#1adb87\">\r\n            <XAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 15 }\r\n              }}\r\n            />\r\n            <YAxis\r\n              style={{\r\n                text: { fill: \"#fff\", fontSize: 12 }\r\n              }}\r\n              tickSizeOuter={0}\r\n              tickPadding={0}\r\n            />\r\n            <VerticalBarSeries data={travelType} />\r\n          </XYPlot>\r\n        )}\r\n      </div>\r\n      <div className=\"charts-btns\">\r\n        <button onClick={() => setChart(\"hour\")}>Pickups by the hour</button>\r\n        <button onClick={() => setChart(\"booking\")}>Modes of booking</button>\r\n        <button onClick={() => setChart(\"month\")}>\r\n          Monthly ride frequency\r\n        </button>\r\n        <button onClick={() => setChart(\"distance\")}>Rides by distance</button>\r\n        <button onClick={() => setChart(\"travelType\")}>Travel type </button>\r\n      </div>\r\n    </div>\r\n    /*\r\n     */\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    mapData: state.map\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Charts);\r\n","import React from \"react\";\nimport Map from \"./Components/Map\";\nimport \"./App.scss\";\nimport FileUpload from \"./Components/FileUpload\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./Redux/store\";\nimport Navbar from \"./Components/Navbar\";\nimport Charts from \"./Components/Charts\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"Top-Container\">\n          <FileUpload />\n          <Map />\n        </div>\n        <Charts />\n        {/* <Maptest /> */}\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}